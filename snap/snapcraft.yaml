name: waterfox-classic # you probably want to 'snapcraft register <name>'
base: core18 # the base snap is the execution environment for this snap
version: '2020.04' # just for humans, typically '1.2+git' or '1.3.2'
summary: Browse the web YOUR way # 79 char long summary
description: |
  Waterfox focuses on giving users choice. The browser is focused on power
  users, which lets you make the important decisions. There is no plugin whitelist 
  (meaning you can run Java Applets and Silverlight apps), you can run whichever
  extensions you like (including bootstrapped add-ons that can completely change 
  functionality of the browser) and absolutely no data or telemetry is sent back
  to Mozilla or the Waterfox project.
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

architectures:
  - build-on: amd64
    run-on: amd64

parts:
  desktop-gtk:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    build-packages:
      - libgtk2.0-dev
      - libgtk-3-dev
    stage-packages:
      - libxkbcommon0  # XKB_CONFIG_ROOT
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libgtk2.0-0
      - libgtk-3-0
      - libgdk-pixbuf2.0-0
      - libglib2.0-bin
      - libgtk2.0-bin
      - libgtk-3-bin
      - unity-gtk2-module
      - unity-gtk3-module
      - libappindicator3-1
      - locales-all
      - xdg-user-dirs
      - ibus-gtk
      - ibus-gtk3
      - libibus-1.0-5
      - libc6
      - libnotify4
    organize:
      usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-2.0: usr/lib/gtk-2.0
      usr/lib/$SNAPCRAFT_ARCH_TRIPLET/gtk-3.0: usr/lib/gtk-3.0
  waterfox:
    # See 'snapcraft plugins'
    plugin: dump
    source: https://github.com/MrAlex94/Waterfox/archive/$SNAPCRAFT_PROJECT_VERSION-classic.tar.gz
    after:
      - desktop-gtk
    build-packages:
      - build-essential
      - bash
      - clang
      - libssl-dev
      - autoconf2.13
      - rustc
      - cargo
      - libgtk2.0-dev
      - libgtk-3-dev
      - libgconf2-dev
      - libdbus-glib-1-dev
      - libdbusmenu-gtk3-dev
      - libdbusmenu-glib-dev
      - libpulse-dev
      - yasm
      - python2.7
      - python3
      - libasound2-dev
      - libc6-dev
      - libc-dev-bin
      #- cbindgen
      - ccache
      - unzip
      - zip
      - libxt-dev
      - libnotify-dev
    override-build: |
      pwd
      echo $META
      echo $SNAPCRAFT_PART_SRC
      cargo install --force cbindgen
      cargo install --force sccache
      PATH="$META/root/.cargo/bin:$PATH" SHELL="/bin/bash" $SNAPCRAFT_PART_SRC/mach build
      cp -r $SNAPCRAFT_PART_SRC $SNAPCRAFT_STAGE/
      echo $SNAPCRAFT_PART_SRC
      echo $SNAPCRAFT_PART_BUILD
      echo $SNAPCRAFT_PART_INSTALL
      pwd
    organize:
      staging-files/usr: usr/
      staging-files/bin: bin/
    stage-packages:
      - libpulse0
      - libasound2
      - libdbus-glib-1-2
      - libpng16-16
      - libxrender1
      - libx11-xcb1
      - libxt6
      - libglib2.0-bin
      - locales-all
      - libdbusmenu-glib4
      - libdbusmenu-gtk3-4
      - libcurl3-gnutls
      - libgl1-mesa-dri
      - libgl1-mesa-glx
      - libmirclient9
      - desktop-file-utils
      - ffmpeg
      - libc-bin
      #- libc6
      - libnspr4
      - libglu1-mesa
      - freeglut3
      - libslang2
      - libnotify4
      - x11-common
      - unity-gtk2-module
      - unity-gtk3-module
      - libgpm2
      #- shared-mime-info
      - libgtk2.0-0
      - libgtk-3-0
      #- libgdk-pixbuf2.0-0
      #- libglib2.0-bin
      #- libgtk2.0-bin
      #- libgtk-3-bin
      #- libgdk-pixbuf2.0-0
      #- libstartup-notification0
      #- libfreetype6
      #- libfontconfig1
      - xdg-desktop-portal
      - xdg-desktop-portal-gtk
      - xdg-desktop-portal-kde
      - xdg-utils
    override-stage: |
      pwd
      ls -l $SNAPCRAFT_PART_BUILD
      PATH="$META/root/.cargo/bin:$PATH" SHELL="/bin/bash" $SNAPCRAFT_PART_BUILD/mach install
      mkdir -p $SNAPCRAFT_STAGE/usr/lib/waterfox
      cp -r /usr/local/lib/waterfox $SNAPCRAFT_STAGE/usr/lib/
      pwd
      snapcraftctl stage
      pwd
    override-prime: |
      pwd
      cp -r /usr/local/lib/waterfox $SNAPCRAFT_PRIME/usr/lib/
      cp $SNAPCRAFT_STAGE/usr/bin/xdg-open $SNAPCRAFT_PRIME/usr/bin/
      snapcraftctl prime
      pwd
      
plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/share/themes
    default-provider: gtk-common-themes:gtk-3-themes
  sound-themes:
    interface: content
    target: $SNAP/share/sounds
    default-provider: gtk-common-themes:sounds-themes
  icon-themes:
    interface: content
    target: $SNAP/share/icons
    default-provider: gtk-common-themes:icon-themes
  gnome-3-28-1804:
    interface: content
    target: $SNAP/gnome-platform
  #browser-sandbox:
    #interface: browser-support
    #allow-sandbox: true

slots:
  dbus-daemon:
    interface: dbus
    bus: session
    name: net.waterfox.waterfox

environment:
  SNAP_DESKTOP_RUNTIME: $SNAP/gnome-platform
    
apps:
  waterfox-classic:
    command: desktop-launch $SNAP/usr/lib/waterfox/waterfox
    extensions: [gnome-3-28]
    command-chain:
      - snap/command-chain/snapcraft-runner
    environment:
      DISABLE_WAYLAND: 1
      HOME: $SNAP_USER_COMMON
      #GTK_USE_PORTAL: 1
    plugs:
      - avahi-observe
      - cups-control
      - desktop
      - camera
      - mount-observe
      - pulseaudio
      - desktop-legacy
      - gsettings
      - home
      - network
      - opengl
      - removable-media
      - unity7
      - x11
      - browser-support
      - screen-inhibit-control
      - network-observe
      - gtk-3-themes
      - sound-themes
      - icon-themes
    slots:
      - dbus-daemon

layout:
  /usr/bin/gjs:
    symlink: $SNAP/gnome-platform/usr/bin/gjs
  /usr/lib/x86_64-linux-gnu/webkit2gtk-4.0:
    bind: $SNAP/gnome-platform/usr/lib/x86_64-linux-gnu/webkit2gtk-4.0
  /usr/share/xml/iso-codes:
    bind: $SNAP/gnome-platform/usr/share/xml/iso-codes
